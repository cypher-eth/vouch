
from __future__ import annotations

import dataclasses
from typing import List, Dict, Optional, overload, Union, Callable, Tuple
from typing_extensions import Literal

from woke.development.core import Contract, Library, Address, Account, Chain, RequestType
from woke.development.primitive_types import *
from woke.development.transactions import TransactionAbc, TransactionRevertedError

from enum import IntEnum

from pytypes.contracts.Descriptors.BolivaresDescriptor import BolivaresDescriptor
from pytypes.contracts.Tokens.ERC721S import ERC721S
from pytypes.contracts.Utils.Documents import Documents



class Bolivares(BolivaresDescriptor, ERC721S, Documents):
    """
    [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#12)
    """
    _abi = {b'\xfc\xfd\xd1\x19': {'inputs': [], 'name': 'VOUCH_ID', 'outputs': [{'internalType': 'bytes32', 'name': '', 'type': 'bytes32'}], 'stateMutability': 'view', 'type': 'function'}, b'=\t\xeaU': {'inputs': [], 'name': 'VOUCH_MSG', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'%f\x08\n': {'inputs': [], 'name': 'VOUCH_NAME', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\t^\xa7\xb3': {'inputs': [{'internalType': 'address', 'name': 'spender', 'type': 'address'}, {'internalType': 'uint256', 'name': 'id', 'type': 'uint256'}], 'name': 'approve', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'p\xa0\x821': {'inputs': [{'internalType': 'address', 'name': 'owner', 'type': 'address'}], 'name': 'balanceOf', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\xcb\xf3\xe12': {'inputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'name': 'barcodes', 'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, b'\x92\xb4\xc8\x1b': {'inputs': [{'components': [{'internalType': 'string', 'name': 'name', 'type': 'string'}, {'internalType': 'string', 'name': 'description', 'type': 'string'}, {'internalType': 'string', 'name': 'image', 'type': 'string'}, {'internalType': 'string', 'name': 'attributes', 'type': 'string'}], 'internalType': 'struct NFTDescriptor.TokenURIParams', 'name': 'params', 'type': 'tuple'}], 'name': 'constructTokenURI', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'pure', 'type': 'function'}, b'\x1b\xdd\xdb;': {'inputs': [{'internalType': 'uint256', 'name': 'tokenId', 'type': 'uint256'}, {'internalType': 'uint256', 'name': '_lastUpdate', 'type': 'uint256'}, {'internalType': 'address', 'name': '_sender', 'type': 'address'}, {'internalType': 'address', 'name': '_recipient', 'type': 'address'}, {'internalType': 'string', 'name': '_msg', 'type': 'string'}, {'internalType': 'string', 'name': '_barcode', 'type': 'string'}], 'name': 'dataURI', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'0Mn-': {'inputs': [{'internalType': 'uint256', 'name': 'dayOfMonth', 'type': 'uint256'}], 'name': 'dayOfMonthString', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'pure', 'type': 'function'}, b'(\xdag\n': {'inputs': [{'internalType': 'address', 'name': '', 'type': 'address'}, {'internalType': 'address', 'name': '', 'type': 'address'}], 'name': 'doesVouch', 'outputs': [{'internalType': 'bool', 'name': '', 'type': 'bool'}], 'stateMutability': 'view', 'type': 'function'}, b'\xd4\xac\xafl': {'inputs': [{'internalType': 'bytes32', 'name': 'hash', 'type': 'bytes32'}, {'internalType': 'bytes', 'name': 'sig', 'type': 'bytes'}], 'name': 'ecrecoverFromSig', 'outputs': [{'internalType': 'address', 'name': 'recoveredAddress', 'type': 'address'}], 'stateMutability': 'pure', 'type': 'function'}, b'\x17\xb7\xc8-': {'inputs': [{'internalType': 'uint256', 'name': 'tokenId', 'type': 'uint256'}, {'internalType': 'string', 'name': 'vouch', 'type': 'string'}], 'name': 'generateAttributesList', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\x04z\x03\x8f': {'inputs': [{'internalType': 'address', 'name': 'sender', 'type': 'address'}, {'internalType': 'address', 'name': 'recipient', 'type': 'address'}, {'internalType': 'string', 'name': 'message', 'type': 'string'}], 'name': 'generateVouchHash', 'outputs': [{'internalType': 'bytes32', 'name': 'hash', 'type': 'bytes32'}], 'stateMutability': 'view', 'type': 'function'}, b'\xb7\xd1h\xe6': {'inputs': [{'internalType': 'string', 'name': '_name', 'type': 'string'}, {'internalType': 'string', 'name': '_description', 'type': 'string'}, {'internalType': 'string', 'name': '_image', 'type': 'string'}, {'internalType': 'string', 'name': '_attributes', 'type': 'string'}], 'name': 'genericDataURI', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\x9f\xa5\xf5\x0b': {'inputs': [], 'name': 'getAllDocuments', 'outputs': [{'internalType': 'string[]', 'name': '', 'type': 'string[]'}], 'stateMutability': 'view', 'type': 'function'}, b'|\xcbjd': {'inputs': [{'internalType': 'string', 'name': '_name', 'type': 'string'}], 'name': 'getDocument', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}, {'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'=\x1c"s': {'inputs': [], 'name': 'getDocumentCount', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\xc6\xb5G\xe6': {'inputs': [{'internalType': 'uint256', 'name': '_index', 'type': 'uint256'}], 'name': 'getDocumentName', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'y\x03/\xc8': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'getUserFromVouch', 'outputs': [{'internalType': 'address', 'name': 'user', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, b'n,\xe3\xb0': {'inputs': [{'internalType': 'address', 'name': '_user', 'type': 'address'}], 'name': 'getUserVouches', 'outputs': [{'internalType': 'bytes32[]', 'name': '', 'type': 'bytes32[]'}], 'stateMutability': 'view', 'type': 'function'}, b'S8\\\xac': {'inputs': [{'internalType': 'bytes32', 'name': '_vouchID', 'type': 'bytes32'}], 'name': 'getVouch', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\x06\x0e\xb2\xf5': {'inputs': [{'internalType': 'bytes32', 'name': 'vouchId', 'type': 'bytes32'}], 'name': 'lastUpdated', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\x0fL\x162': {'inputs': [{'internalType': 'uint256', 'name': 'month', 'type': 'uint256'}], 'name': 'monthStringShort', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'pure', 'type': 'function'}, b'\x06\xfd\xde\x03': {'inputs': [], 'name': 'name', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'cR!\x1e': {'inputs': [{'internalType': 'uint256', 'name': 'id', 'type': 'uint256'}], 'name': 'ownerOf', 'outputs': [{'internalType': 'address', 'name': 'owner', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, b'\xb4Q\xa9:': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'processAllUnvouched', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'y\x89\x8e\xbb': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'processUnvouched', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xf2\xc2\x98\xbe': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'register', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xdd\xe5\x1fm': {'inputs': [{'internalType': 'string', 'name': '_name', 'type': 'string'}], 'name': 'removeDocument', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xb7\\}\xc6': {'inputs': [{'internalType': 'bytes32', 'name': 'vouchId', 'type': 'bytes32'}], 'name': 'revoke', 'outputs': [{'internalType': 'bool', 'name': 'success', 'type': 'bool'}], 'stateMutability': 'nonpayable', 'type': 'function'}, b'2\x8a\x93\xe8': {'inputs': [{'internalType': 'bytes32', 'name': 'vouchId', 'type': 'bytes32'}], 'name': 'revoked', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'B\x84.\x0e': {'inputs': [{'internalType': 'address', 'name': 'from', 'type': 'address'}, {'internalType': 'address', 'name': 'to', 'type': 'address'}, {'internalType': 'uint256', 'name': 'id', 'type': 'uint256'}], 'name': 'safeTransferFrom', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xb8\x8dO\xde': {'inputs': [{'internalType': 'address', 'name': 'from', 'type': 'address'}, {'internalType': 'address', 'name': 'to', 'type': 'address'}, {'internalType': 'uint256', 'name': 'id', 'type': 'uint256'}, {'internalType': 'bytes', 'name': 'data', 'type': 'bytes'}], 'name': 'safeTransferFrom', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xa2,\xb4e': {'inputs': [{'internalType': 'address', 'name': 'operator', 'type': 'address'}, {'internalType': 'bool', 'name': 'approved', 'type': 'bool'}], 'name': 'setApprovalForAll', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\x9cd\xd0\xae': {'inputs': [{'internalType': 'string', 'name': '_name', 'type': 'string'}, {'internalType': 'string', 'name': '_data', 'type': 'string'}], 'name': 'setDocument', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xc9+\xce\x87': {'inputs': [{'internalType': 'string[]', 'name': '_name', 'type': 'string[]'}, {'internalType': 'string[]', 'name': '_data', 'type': 'string[]'}], 'name': 'setDocuments', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\x01\xff\xc9\xa7': {'inputs': [{'internalType': 'bytes4', 'name': 'interfaceId', 'type': 'bytes4'}], 'name': 'supportsInterface', 'outputs': [{'internalType': 'bool', 'name': '', 'type': 'bool'}], 'stateMutability': 'view', 'type': 'function'}, b'\x95\xd8\x9bA': {'inputs': [], 'name': 'symbol', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\xdeQ\x01\xaf': {'inputs': [{'internalType': 'uint256', 'name': 'timestamp', 'type': 'uint256'}], 'name': 'timestampToDate', 'outputs': [{'internalType': 'uint256', 'name': 'year', 'type': 'uint256'}, {'internalType': 'uint256', 'name': 'month', 'type': 'uint256'}, {'internalType': 'uint256', 'name': 'day', 'type': 'uint256'}], 'stateMutability': 'pure', 'type': 'function'}, b'X\x8a\x93\x88': {'inputs': [{'internalType': 'uint256', 'name': 'timestamp', 'type': 'uint256'}], 'name': 'timestampToString', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'pure', 'type': 'function'}, b'qL\xffV': {'inputs': [], 'name': 'tokenIds', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\xcc3\xc8u': {'inputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'name': 'tokenInfo', 'outputs': [{'internalType': 'bytes32', 'name': '', 'type': 'bytes32'}], 'stateMutability': 'view', 'type': 'function'}, b'\xc8{V\xdd': {'inputs': [{'internalType': 'uint256', 'name': 'id', 'type': 'uint256'}], 'name': 'tokenURI', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'#\xb8r\xdd': {'inputs': [{'internalType': 'address', 'name': 'from', 'type': 'address'}, {'internalType': 'address', 'name': 'to', 'type': 'address'}, {'internalType': 'uint256', 'name': 'id', 'type': 'uint256'}], 'name': 'transferFrom', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'e\x98\xa1\xae': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'unregister', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, b'*\x97\xe1\x8c': {'inputs': [{'internalType': 'string', 'name': '', 'type': 'string'}, {'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'name': 'unvouched', 'outputs': [{'internalType': 'address', 'name': 'sender', 'type': 'address'}, {'internalType': 'string', 'name': 'message', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\xb1\x14\xad\x9c': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'unvouchedCount', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\x13\xaa\xdd3': {'inputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'name': 'userBarcode', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'!\xce\x91\x9d': {'inputs': [{'internalType': 'address', 'name': '', 'type': 'address'}, {'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'name': 'userInfo', 'outputs': [{'internalType': 'bytes32', 'name': '', 'type': 'bytes32'}], 'stateMutability': 'view', 'type': 'function'}, b'\xbb\x9cl>': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}], 'name': 'verify', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\x8c\xf2\xf9\xb5': {'inputs': [{'internalType': 'bytes32', 'name': 'hash', 'type': 'bytes32'}, {'internalType': 'bytes', 'name': 'sig', 'type': 'bytes'}], 'name': 'verifyVouchSig', 'outputs': [{'internalType': 'bool', 'name': 'success', 'type': 'bool'}], 'stateMutability': 'pure', 'type': 'function'}, b'\xc0\x05\xe5T': {'inputs': [{'internalType': 'string', 'name': 'barcode', 'type': 'string'}, {'internalType': 'string', 'name': 'message', 'type': 'string'}], 'name': 'vouch', 'outputs': [{'internalType': 'bool', 'name': 'success', 'type': 'bool'}], 'stateMutability': 'nonpayable', 'type': 'function'}, b'\xca\xacA\x15': {'inputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'name': 'vouchCount', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, b'\x1d\t\xcbP': {'inputs': [{'internalType': 'bytes32', 'name': '', 'type': 'bytes32'}], 'name': 'vouchInfo', 'outputs': [{'internalType': 'address', 'name': 'sender', 'type': 'address'}, {'internalType': 'uint48', 'name': 'lastUpdateTime', 'type': 'uint48'}, {'internalType': 'uint48', 'name': 'revokedTime', 'type': 'uint48'}], 'stateMutability': 'view', 'type': 'function'}, b'1\xe1\xf5\xf7': {'inputs': [{'internalType': 'bytes32', 'name': '', 'type': 'bytes32'}], 'name': 'vouchMsg', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, b'\xf6\xbb\x93\xec': {'inputs': [{'internalType': 'bytes32', 'name': 'vouchId', 'type': 'bytes32'}], 'name': 'vouchSender', 'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, b'\xf9N\x92]': {'inputs': [{'internalType': 'bytes32', 'name': '', 'type': 'bytes32'}], 'name': 'vouchToken', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}}
    _creation_code = "608034620002fd576040906001600160401b03908083018281118282101762000208578352600e81526020916d5465737420426f6c69766172657360901b83830152835184810181811083821117620002085785526005815264564942455360d81b84820152825182811162000208576003918254916001958684811c94168015620002f2575b88851014620002de578190601f948581116200028b575b50889085831160011462000228575f926200021c575b50505f1982861b1c191690861b1783555b8051938411620002085760049586548681811c91168015620001fd575b82821014620001ea57838111620001a2575b50809285116001146200013857509383949184925f956200012c575b50501b925f19911b1c19161790555b51613ca09081620003028239f35b015193505f806200010f565b92919084601f198116885f52855f20955f905b898383106200018757505050106200016d575b50505050811b0190556200011e565b01519060f8845f19921b161c191690555f8080806200015e565b8587015189559097019694850194889350908101906200014b565b875f52815f208480880160051c820192848910620001e0575b0160051c019087905b828110620001d4575050620000f3565b5f8155018790620001c4565b92508192620001bb565b602288634e487b7160e01b5f525260245ffd5b90607f1690620000e1565b634e487b7160e01b5f52604160045260245ffd5b015190505f80620000b3565b90889350601f19831691875f528a5f20925f5b8c8282106200027457505084116200025c575b505050811b018355620000c4565b01515f1983881b60f8161c191690555f80806200024e565b8385015186558c979095019493840193016200023b565b909150855f52885f208580850160051c8201928b8610620002d4575b918a91869594930160051c01915b828110620002c55750506200009d565b5f81558594508a9101620002b5565b92508192620002a7565b634e487b7160e01b5f52602260045260245ffd5b93607f169362000086565b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a71461039a578063047a038f14610395578063060eb2f51461039057806306fdde031461038b578063095ea7b3146103865780630f4c16321461038157806313aadd331461037c57806317b7c82d146103775780631bdddb3b146103725780631d09cb501461036d57806321ce919d1461036857806323b872dd1461033b5780632566080a1461036357806328da670a1461035e5780632a97e18c14610359578063304d6e2d1461035457806331e1f5f71461034f578063328a93e81461034a5780633d09ea55146103455780633d1c22731461034057806342842e0e1461033b57806353385cac14610336578063588a9388146103315780636352211e1461032c5780636598a1ae146103275780636e2ce3b01461032257806370a082311461031d578063714cff561461031857806379032fc8146102b457806379898ebb146103135780637ccb6a641461030e5780638cf2f9b51461030957806392b4c81b1461030457806395d89b41146102ff5780639c64d0ae146102fa5780639fa5f50b146102f5578063a22cb465146102f0578063b114ad9c146102eb578063b451a93a146102e6578063b75c7dc6146102e1578063b7d168e6146102dc578063b88d4fde146102d7578063bb9c6c3e146102d2578063c005e554146102cd578063c6b547e6146102c8578063c87b56dd146102c3578063c92bce87146102be578063caac4115146102b9578063cbf3e132146102b4578063cc33c875146102af578063d4acaf6c146102aa578063dde51f6d146102a5578063de5101af146102a0578063f2c298be1461029b578063f6bb93ec14610296578063f94e925d146102915763fcfdd1191461028c575f80fd5b611ee2565b611eb8565b611e85565b611dc9565b611d98565b611d8a565b611d3c565b611d12565b610ffe565b611cda565b611c5a565b611872565b611822565b6117cc565b6117b4565b611772565b6116ea565b611631565b611537565b6114a8565b61147f565b611399565b611344565b61129e565b6111db565b611193565b61111f565b611028565b610fb7565b610f45565b610ee8565b610e3e565b610db3565b610d94565b610d3b565b610a3d565b610d1e565b610d03565b610c88565b610c5e565b610c3f565b610bba565b610ae2565b610a92565b6109e6565b61096c565b6108f4565b6108b6565b61087e565b61084b565b610832565b61074e565b6105da565b610584565b346104085760203660031901126104085760043563ffffffff60e01b8116809103610408576020906301ffc9a760e01b81149081156103f7575b81156103e6575b506040519015158152f35b635b5e139f60e01b1490505f6103db565b6380ac58cd60e01b811491506103d4565b5f80fd5b600435906001600160a01b038216820361040857565b602435906001600160a01b038216820361040857565b606435906001600160a01b038216820361040857565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b0382111761047d57604052565b61044e565b606081019081106001600160401b0382111761047d57604052565b61014081019081106001600160401b0382111761047d57604052565b90601f801991011681019081106001600160401b0382111761047d57604052565b60405190608082018281106001600160401b0382111761047d57604052565b6040519061050682610462565b565b6040519061050682610482565b6001600160401b03811161047d57601f01601f191660200190565b92919261053c82610515565b9161054a60405193846104b9565b829481845281830111610408578281602093845f960137010152565b9080601f830112156104085781602061058193359101610530565b90565b346104085760603660031901126104085761059d61040c565b6105a5610422565b90604435906001600160401b038211610408576020926105cc6105d2933690600401610566565b91612741565b604051908152f35b346104085760203660031901126104085760206105d26004355f52600760205265ffffffffffff60405f205460a01c1690565b634e487b7160e01b5f525f60045260245ffd5b90600182811c9216801561064e575b602083101461063a57565b634e487b7160e01b5f52602260045260245ffd5b91607f169161062f565b9060405191825f82549261066b84610620565b9081845260019485811690815f146106d45750600114610694575b5050610506925003836104b9565b909391505f52602090815f20935f915b8183106106bc57505061050693508201015f80610686565b855488840185015294850194879450918301916106a4565b91505061050694506020925060ff191682840152151560051b8201015f80610686565b5f5b8381106107085750505f910152565b81810151838201526020016106f9565b90602091610731815180928185528580860191016106f7565b601f01601f1916010190565b906020610581928181520190610718565b34610408575f8060031936011261082f57604051908060035461077081610620565b8085529160019180831690811561080557506001146107aa575b6107a68561079a818703826104b9565b6040519182918261073d565b0390f35b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106107ed57505050810160200161079a826107a661078a565b805460208587018101919091529093019281016107d2565b8695506107a69693506020925061079a94915060ff191682840152151560051b820101929361078a565b80fd5b346104085760403660031901126104085761040861040c565b34610408576020366003190112610408576107a661086a600435613031565b604051918291602083526020830190610718565b34610408576020366003190112610408576001600160a01b0361089f61040c565b165f52600d6020526107a661086a60405f20610658565b34610408576040366003190112610408576024356001600160401b0381116104085761086a6108ec6107a6923690600401610566565b600435612d35565b346104085760c0366003190112610408576044356001600160a01b038116036104085761091f610438565b506001600160401b0360843581811161040857610940903690600401610566565b9060a435908111610408576107a69161096061079a923690600401610566565b9060243560043561295a565b34610408576020366003190112610408576004355f526007602052606060405f20546040519060018060a01b038116825265ffffffffffff8160a01c16602083015260d01c6040820152f35b634e487b7160e01b5f52603260045260245ffd5b80548210156109e1575f5260205f2001905f90565b6109b8565b34610408576040366003190112610408576109ff61040c565b6001600160a01b03165f9081526009602052604090208054602435919082101561040857602091610a2f916109cc565b90546040519160031b1c8152f35b34610408576060366003190112610408576001600160a01b03600435818116036104085760243590811603610408575f80fd5b60405190602082018281106001600160401b0382111761047d576040525f8252565b34610408575f366003190112610408576107a6604051610ab181610462565b601081526f5a757a616c7520426f6c69766172657360801b6020820152604051918291602083526020830190610718565b3461040857604036600319011261040857602060ff610b32610b0261040c565b610b0a610422565b6001600160a01b039182165f9081526010865260408082209290931681526020919091522090565b54166040519015158152f35b90610b51602092828151948592016106f7565b0190565b6020610b6e9181604051938285809451938492016106f7565b8101601181520301902090565b6020610b949181604051938285809451938492016106f7565b8101600e81520301902090565b80548210156109e1575f5260205f209060011b01905f90565b34610408576040366003190112610408576004356001600160401b03811161040857610bea903690600401610566565b610bf660243591610b55565b90815481101561040857610c0991610ba1565b5080546001600160a01b031690610c2290600101610658565b906107a66040519283928352604060208401526040830190610718565b34610408576020366003190112610408576107a661086a6004356131e0565b34610408576020366003190112610408576004355f5260086020526107a661086a60405f20610658565b34610408576020366003190112610408576004355f526007602052602060405f205460d01c604051908152f35b60405190610cc282610482565b602c82526b6573206174205a757a616c7560a01b6040837f4920766f756368207468697320706572736f6e2068616420676f6f642076696260208201520152565b34610408575f366003190112610408576107a661086a610cb5565b34610408575f366003190112610408576020600254604051908152f35b3461040857602080600319360112610408576040805182819382526060519081818401525f5b828110610d7f5750505f828201840152601f01601f19168101030190f35b60808101518682018601528593508101610d61565b34610408576020366003190112610408576107a661086a600435612e2a565b34610408576020366003190112610408576020610dd16004356134d6565b6040516001600160a01b039091168152f35b9181601f84011215610408578235916001600160401b038311610408576020838186019501011161040857565b602060031982011261040857600435906001600160401b03821161040857610e3a91600401610de3565b9091565b3461040857610e4c36610e10565b60405181838237600e8183019081528190036020019020546001600160a01b03163303610ea357610e7c91611f1c565b80546001600160a01b0319169055335f908152600d60205260409020610ea190612080565b005b60405162461bcd60e51b815260206004820152601960248201527f426172636f6465206973206e6f742072656769737465726564000000000000006044820152606490fd5b346104085760208060031936011261040857610f0261040c565b5060405181819282019080835260605180925260408301916080915f5b828110610f2e57505050500390f35b835185528695509381019392810192600101610f1f565b34610408576020366003190112610408576001600160a01b03610f6661040c565b168015610f83575f526006602052602060405f2054604051908152f35b60405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b34610408575f366003190112610408576020600a54604051908152f35b602060031982011261040857600435906001600160401b0382116104085761058191600401610566565b346104085760206001600160a01b0361101e61101936610fd4565b610b7b565b5416604051908152f35b346104085761103636610e10565b90604091825181838237808281016011815260209283910301902080549061105d826120b4565b9561106a815197886104b9565b8287525f918252838220908488015b8484106110e657610ea18888886110dd6110d06110ab8f6110a581516110a08115156120cb565b6120e6565b906120f9565b51936110bf6110ba8288611f35565b612125565b84516001600160a01b031695611f1c565b546001600160a01b031690565b91015191612501565b60028660019284516110f781610462565b848060a01b03875416815261110d858801610658565b83820152815201930193019291611079565b34610408576111896001600160401b0361117461113b36610e10565b602060016040959395518387823782818581015f815203019020019482604051938492833781015f8152030190205460201c1691610658565b90604051928392604084526040840190610718565b9060208301520390f35b34610408576040366003190112610408576024356001600160401b038111610408576111d16111c86020923690600401610de3565b906004356127f9565b6040519015158152f35b34610408576003196020368201126104085760048035916001600160401b0390818411610408576080908436030112610408576112166104da565b90838301358181116104085761123190843691870101610566565b825260248401358181116104085761124e90843691870101610566565b602083015260448401358181116104085761126e90843691870101610566565b60408301526064840135908111610408576107a69361079a936112949236920101610566565b60608201526133a2565b34610408575f8060031936011261082f5760405190806004546112c081610620565b8085529160019180831690811561080557506001146112e9576107a68561079a818703826104b9565b9250600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061132c57505050810160200161079a826107a661078a565b80546020858701810191909152909301928101611311565b34610408576040366003190112610408576001600160401b0360043581811161040857611375903690600401610de3565b9060243592831161040857611391610ea1933690600401610de3565b929091613adf565b34610408575f8060031936011261082f576002546113b6816120b4565b906113c460405192836104b9565b8082526002835260209283830191817f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace845b83831061145b5750505050604051928484019085855251809152604084019460408260051b8601019392955b82871061142f5785850386f35b90919293828061144b600193603f198a82030186528851610718565b9601920196019592919092611422565b600188819261146d859b9a989b610658565b815201920192019190969395966113f6565b346104085760403660031901126104085761149861040c565b5060243580151503610408575f80fd5b34610408576114bf6114b936610e10565b90611f35565b8054906114cb826120b4565b916040916114db835194856104b9565b8184525f90815260208082208186015b8484106114fe5786518651908152602090f35b600283600192885161150f81610462565b848060a01b038654168152611525858701610658565b838201528152019201930192906114eb565b346104085761154536610e10565b9060409081519280828537838181016011815260209586910301902092835461156d816120b4565b9161157a815193846104b9565b8183525f9586528686208691888086015b8585106115f6575050505050506115a4815115156120cb565b835b81518110156115e057806115da6115bf600193856120f9565b5180516001600160a01b031690896110dd6110d0898b611f1c565b016115a6565b846115f36115ee8587611f35565b6121b5565b80f35b600191600291845161160781610462565b848060a01b03875416815261161d858801610658565b83820152815201930193019291899061158b565b3461040857602036600319011261040857600435805f5260076020523360018060a01b0360405f205416036116ae576116a29061167f65ffffffffffff4216915f52600760205260405f2090565b80546001600160d01b031660d09290921b6001600160d01b031916919091179055565b60405160018152602090f35b60405162461bcd60e51b81526020600482015260146024820152730a6cadcc8cae440c8d2c840dcdee840ecdeeac6d60631b6044820152606490fd5b34610408576080366003190112610408576001600160401b036004358181116104085761171b903690600401610566565b9060243581811161040857611734903690600401610566565b916044358281116104085761174d903690600401610566565b606435928311610408576107a69361176c61079a943690600401610566565b92612def565b346104085760803660031901126104085761178b61040c565b50611794610422565b506064356001600160401b03811161040857610408903690600401610de3565b346104085760206105d26117c736610fd4565b6124c5565b34610408576040366003190112610408576001600160401b03600435818111610408576117fd903690600401610566565b906024359081116104085760209161181c6111d1923690600401610de3565b91612408565b34610408576020366003190112610408576004356002548110156104085761086a6107a69160025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01610658565b346104085760208060031936011261040857600435905f90828252600c8152604092838320546118b6905f52600760205265ffffffffffff60405f205460a01c1690565b818452600c8352848420545f526007602052906118d2816134d6565b50846118dc610cb5565b946001600160a01b036118ee846134d6565b168152600d8552206118ff90610658565b9361190982613304565b948651809686820166566f756368202360c81b9052805190818860278501920191611933926106f7565b81010360078101875260270161194990876104b9565b8651936119558561049d565b61010285527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3230868601527f30302f73766722207072657365727665417370656374526174696f3d22784d69888601527f6e594d696e206d656574222076696577426f783d22302030203335302033353060608601527f223e3c7374796c653e2e62617365207b2066696c6c3a20236666656566663b2060808601527f666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a203160a08601527f3570783b207d3c2f7374796c653e3c726563742077696474683d22313030252260c08601527f206865696768743d2231303025222066696c6c3d222331393437336622202f3e60e08601527f3c7465787420783d223235302220793d2234302220636c6173733d226261736561010086015261111f60f11b610120860152611a9e90612e2a565b938751948591878301611ab091610b3e565b611ab991610b3e565b7f3c2f746578743e3c7465787420783d2232302220793d2238302220636c6173738152671e913130b9b2911f60c11b60208201526028010393601f19948581018252611b0590826104b9565b87518091878201611b1591610b3e565b611b1f9085610b3e565b611b2890612c7c565b038581018252611b3890826104b9565b611b4184613304565b8851928392888401611b5291610b3e565b611b5b91610b3e565b611b6490612cf1565b611b6d91610b3e565b6c1e17ba32bc3a1f1e17b9bb339f60991b8152600d01038481018252611b9390826104b9565b611b9c9061367d565b9286518094868201611bd290601a907f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081520190565b611bdb91610b3e565b038181018552611beb90856104b9565b865180958101611bfa906128da565b039081018552611c0a90856104b9565b611c1391612d35565b91611c1d93612def565b90516107a681928261073d565b9181601f84011215610408578235916001600160401b038311610408576020808501948460051b01011161040857565b34610408576040366003190112610408576001600160401b0360043581811161040857611c8b903690600401611c2a565b9160243590811161040857611ca4903690600401611c2a565b5f9291925b848110611cb257005b80611cd0611cc4611cd59388876127b8565b9061139184878a6127b8565b6124f3565b611ca9565b34610408576020366003190112610408576001600160a01b03611cfb61040c565b165f52600f602052602060405f2054604051908152f35b34610408576020366003190112610408576004355f52600c602052602060405f2054604051908152f35b34610408576040366003190112610408576024356001600160401b038111610408573660238201121561040857610dd1611d826020923690602481600401359101610530565b600435612826565b3461040857610ea136610e10565b34610408576020366003190112610408576060611db660043561376f565b9060405192835260208301526040820152f35b3461040857611dd736610e10565b60405181838237600e8183019081528190036020019020546001600160a01b0316611e4057610ea191611e2d33611e0e8484611f1c565b80546001600160a01b0319166001600160a01b03909216919091179055565b335f908152600d60205260409020611fbf565b60405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f742072656769737465722073616d652062696c6c207477696365006044820152606490fd5b34610408576020366003190112610408576004355f908152600760209081526040909120546001600160a01b0316610dd1565b34610408576020366003190112610408576004355f52600b602052602060405f2054604051908152f35b34610408575f3660031901126104085760206040517f2c74dac1fd3ae13388f7a55930dfea50b1d0adc16bacffd74160c1dd2170b2828152f35b6020908260405193849283378101600e81520301902090565b6020908260405193849283378101601181520301902090565b60209082604051938492833781015f81520301902090565b818110611f71575050565b5f8155600101611f66565b9190601f8111611f8b57505050565b610506925f5260205f20906020601f840160051c83019310611fb5575b601f0160051c0190611f66565b9091508190611fa8565b9092916001600160401b03811161047d57611fe481611fde8454610620565b84611f7c565b5f601f821160011461201b57819293945f92612010575b50508160011b915f199060031b1c1916179055565b013590505f80611ffb565b601f1982169461202e845f5260205f2090565b91805b87811061206857508360019596971061204f575b505050811b019055565b01355f19600384901b60f8161c191690555f8080612045565b90926020600181928686013581550194019101612031565b5f9061208c8154610620565b601f8111612098575055565b818352602083206120b191601f0160051c810190611f66565b55565b6001600160401b03811161047d5760051b60200190565b1561040857565b634e487b7160e01b5f52601160045260245ffd5b5f198101919082116120f457565b6120d2565b80518210156109e15760209160051b010190565b600281901b91906001600160fe1b038116036120f457565b805480156121a1575f19019061213b8282610ba1565b61219c57805f60019255016121508154610620565b908161215b57505055565b601f821160011461216d575f91505555565b61218d6120b192825f526001601f60205f20920160051c82019101611f66565b5f908082528160208120915555565b61060d565b634e487b7160e01b5f52603160045260245ffd5b8054905f90818155826121c757505050565b6001600160ff1b03831683036120f457815260209182822092600191821b8401935b8481106121f7575050505050565b8084600292558484820161220b8154610620565b8061221a575b505050016121e9565b86601f80831160011461223457505050555b845f80612211565b938390528689206122509461218d930160051c81019101611f66565b61222c565b91909182516001600160401b03811161047d5761227681611fde8454610620565b602080601f83116001146122af5750819293945f926122a45750508160011b915f199060031b1c1916179055565b015190505f80611ffb565b90601f198316956122c3855f5260205f2090565b925f905b8882106122fd575050836001959697106122e557505050811b019055565b01515f1960f88460031b161c191690555f8080612045565b806001859682949686015181550195019301906122c7565b8054600160401b81101561047d57612334906001928382018155610ba1565b61219c57825181546001600160a01b0319166001600160a01b0391909116178155810191602080910151908151916001600160401b03831161047d576123848361237e8754610620565b87611f7c565b81601f84116001146123bb57509282939183925f946123b0575b50501b915f199060031b1c1916179055565b015192505f8061239e565b919083601f1981166123d0885f5260205f2090565b945f905b888383106123ee57505050106122e557505050811b019055565b8587015188559096019594850194879350908101906123d4565b906001600160a01b0361241a83610b7b565b541691823314612476578215612446575061243a90612441933691610530565b9033612501565b600190565b61244193925061245861246c91610b55565b916124616104f9565b338152933691610530565b6020830152612315565b60405162461bcd60e51b815260206004820152602160248201527f566f75636820666f7220796f757273656c66206973206e6f7420616c6c6f77656044820152601960fa1b6064820152608490fd5b6001600160a01b03906124d790610b7b565b541680156124ee575f52600f60205260405f205490565b505f90565b5f1981146120f45760010190565b6001600160a01b038181165f818152601060209081526040808320878616845290915281205494959461254e94939060ff16156125ae575b505050612547838583612741565b92846125fd565b612560815f52600b60205260405f2090565b541561256a575050565b6120b1906125a0600a548094612587612582836124f3565b600a55565b8361259a835f52600c60205260405f2090565b55613528565b5f52600b60205260405f2090565b604092825260106020526125d4878484209060018060a01b03165f5260205260405f2090565b600160ff1982541617905586168152600f602052206125f381546124f3565b90555f8080612539565b816126089184612741565b805f52600760205265ffffffffffff8060405f205460a01c1615612693575b906126806105069461266361268e94612650612641610508565b6001600160a01b039094168452565b4216602083019065ffffffffffff169052565b5f604082015261267b835f52600760205260405f2090565b6126fc565b5f52600860205260405f2090565b612255565b9060018060a01b0384165f52600960205260405f20805494600160401b86101561047d5761266361268e94846126ee6126d88a6126809760016105069d0181556109cc565b819391549060031b91821b915f19901b19161790565b905593945050945050612627565b8151602083015160409093015165ffffffffffff60a01b60a09490941b939093166001600160a01b039091161760d09290921b6001600160d01b031916919091179055565b6127b2909291926127a460405193849260208401963088527f2c74dac1fd3ae13388f7a55930dfea50b1d0adc16bacffd74160c1dd2170b282604086015260018060a01b03809216606086015216608084015260a08084015260c0830190610718565b03601f1981018352826104b9565b51902090565b91908110156109e15760051b81013590601e19813603018212156104085701908135916001600160401b038311610408576020018236038113610408579190565b6001600160a01b039261281792612811913691610530565b90612826565b161561282257600190565b5f90565b9060418151145f1461284e5761058191602082015190606060408401519301515f1a90612854565b50505f90565b9091927f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081116128d25760809360ff6020946040519485521684840152604083015260608201525f92839182805260015afa156128c6578051906001600160a01b038216156128c1575090565b905090565b604051903d90823e3d90fd5b505050505f90565b7f54686973204e465420726570726573656e74732061207369676e6564206d657381527f736167652066726f6d20612073656e64657220746f207468697320616464726560208201527f73732e2054686973204e46542063616e6e6f74206265207472616e7366657265604082015261321760f11b606082015260620190565b61296381613304565b926040928351958660209687820166566f756368202360c81b9052805190818960278501920191612993926106f7565b8101036007810188526027016129a990886104b9565b8451916129b58361049d565b61010283527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3230878401527f30302f73766722207072657365727665417370656374526174696f3d22784d69868401527f6e594d696e206d656574222076696577426f783d22302030203335302033353060608401527f223e3c7374796c653e2e62617365207b2066696c6c3a20236666656566663b2060808401527f666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a203160a08401527f3570783b207d3c2f7374796c653e3c726563742077696474683d22313030252260c08401527f206865696768743d2231303025222066696c6c3d222331393437336622202f3e60e08401527f3c7465787420783d223235302220793d2234302220636c6173733d226261736561010084015261111f60f11b610120840152612afe90612e2a565b918551928391888301612b1091610b3e565b612b1991610b3e565b7f3c2f746578743e3c7465787420783d2232302220793d2238302220636c6173738152671e913130b9b2911f60c11b60208201526028010391601f19928381018252612b6590826104b9565b85518091888201612b7591610b3e565b612b7f9086610b3e565b612b8890612c7c565b038381018252612b9890826104b9565b612ba185613304565b8651928392898401612bb291610b3e565b612bbb91610b3e565b612bc490612cf1565b612bcd91610b3e565b6c1e17ba32bc3a1f1e17b9bb339f60991b8152600d01038281018252612bf390826104b9565b612bfc9061367d565b9380518095878201612c3290601a907f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081520190565b612c3b91610b3e565b038281018652612c4b90866104b9565b5180958101612c59906128da565b039081018552612c6990856104b9565b612c7291612d35565b9161058193612def565b7f3c2f746578743e3c7465787420783d2232302220793d223236352220636c617381527f733d2262617365223e66726f6d3a203c2f746578743e3c7465787420783d223260208201527f302220793d223239302220636c6173733d2262617365223e0000000000000000604082015260580190565b7f3c2f746578743e3c7465787420783d223234302220793d223332302220636c61815271039b99e913130b9b2911f3b37bab1b41011960751b602082015260320190565b6064612d4361058192613304565b926040519384917f7b2274726169745f74797065223a22566f756368222c2276616c7565223a22006020840152612d84815180926020603f870191016106f7565b820162089f4b60ea1b603f8201527f7b2274726169745f74797065223a22566f756368204944222c2276616c7565226042820152601d60f91b6062820152612dd68251809360206063850191016106f7565b01607d60f81b60638201520360448101845201826104b9565b9290916040519260808401948486106001600160401b0387111761047d576105819560405284526020840152604083015260608201526133a2565b6105816022612e4c612e58612e41612e529561376f565b9691969390936131e0565b92613031565b94613304565b6040519482612e718794518092602080880191016106f7565b830190600160fd1b91826020820152612e948251809360206021850191016106f7565b01906021820152612eae82518093602087850191016106f7565b010360028101845201826104b9565b60405190612eca82610462565b60038252622530b760e91b6020830152565b60405190612ee982610462565b60038252622332b160e91b6020830152565b60405190612f0882610462565b600382526226b0b960e91b6020830152565b60405190612f2782610462565b600382526220b83960e91b6020830152565b60405190612f4682610462565b60038252624d617960e81b6020830152565b60405190612f6582610462565b6003825262253ab760e91b6020830152565b60405190612f8482610462565b6003825262129d5b60ea1b6020830152565b60405190612fa382610462565b600382526241756760e81b6020830152565b60405190612fc282610462565b600382526205365760ec1b6020830152565b60405190612fe182610462565b600382526213d8dd60ea1b6020830152565b6040519061300082610462565b60038252622737bb60e91b6020830152565b6040519061301f82610462565b600382526244656360e81b6020830152565b600181146130fa57600281146130f157600381146130e857600481146130df57600581146130d657600681146130cd57600781146130c457600881146130bb57600981146130b257600a81146130a957600b81146130a057600c1461309857610581610a70565b610581613012565b50610581612ff3565b50610581612fd4565b50610581612fb5565b50610581612f96565b50610581612f77565b50610581612f58565b50610581612f39565b50610581612f1a565b50610581612efb565b50610581612edc565b50610581612ebd565b6040519061311082610462565b60038252620c5cdd60ea1b6020830152565b6040519061312f82610462565b60038252620c9b9960ea1b6020830152565b6040519061314e82610462565b60038252620cdc9960ea1b6020830152565b6040519061316d82610462565b60048252630c8c5cdd60e21b6020830152565b6040519061318d82610462565b60048252630c8c9b9960e21b6020830152565b604051906131ad82610462565b60048252630c8cdc9960e21b6020830152565b604051906131cd82610462565b60048252630ccc5cdd60e21b6020830152565b90606091600181146132ab57600281146132a05760038114613295576015811461328a576016811461327f576017811461327457601f811461326957601f811080613260575b61322d5750565b61325291925061323f61058191613304565b6127a46040519384926020840190610b3e565b610e8d60f31b815260020190565b50801515613226565b5090506105816131c0565b5090506105816131a0565b509050610581613180565b509050610581613160565b509050610581613141565b509050610581613122565b509050610581613103565b906132c082610515565b6132cd60405191826104b9565b82815280926132de601f1991610515565b0190602036910137565b90600282018092116120f457565b90602082018092116120f457565b8015613384575f818181805b61336c575061331e816132b6565b935b61332a5750505090565b613333906120e6565b90600a90603082820681018091116120f45785518410156109e15760f81b6001600160f81b031916841a85840160200153049081613320565b9150613379600a916124f3565b910480849291613310565b5060405161339181610462565b60018152600360fc1b602082015290565b6105816133fe6134956134ca9361347c61346e82519261344a61345060208301519261344a603b606060408401519301519560296040519c8d809c683d913730b6b2911d1160b91b6020830152602081519485930191016106f7565b8a0171111610113232b9b1b934b83a34b7b7111d1160711b602982015261342e82518093602086850191016106f7565b0101600d906c1116101134b6b0b3b2911d101160991b81520190565b90610b3e565b71222c202261747472696275746573223a205b60701b815260120190565b615d7d60f01b815260020190565b0391613490601f19938481018352826104b9565b61367d565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020820152938491603d830161344a565b039081018352826104b9565b5f908152600560205260409020546001600160a01b03169081156134f657565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606490fd5b6001600160a01b03818116919082156135e55761354d845f52600560205260405f2090565b54166135af576001600160a01b0381165f908152600660205260409020613588919080546001019055611e0e845f52600560205260405f2090565b5f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b60405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b6040519061362b82610482565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b8051156137665761368c61361e565b6136a86136a361369c84516132e8565b6003900490565b61210d565b916136ba6136b5846132f6565b6132b6565b92835280815182019060208501935b82821061370a575050506003905106806001146136f9576002146136eb575090565b603d60f81b5f199091015290565b50613d3d60f01b6001199091015290565b90919360049060038094019384516001603f81818460121c16880101519260f893841b8652828282600c1c1689010151841b8387015282828260061c1689010151841b60028701521686010151901b90820152019391906136c9565b50610581610a70565b62015180900462010bd9908181019182125f82129080158216911516176120f4576226496501905f62253d8c831291129080158216911516176120f4576137e66137c46137bb8361390e565b62023ab1900590565b916137e06137d96137d48561391f565b613883565b6004900590565b906139ad565b9061387d61381f61381a61380d6138046137ff8761389f565b613932565b62164b09900590565b946137e06137d987613944565b6138bb565b61387861384d61383961383184613956565b61098f900590565b926137e061384685613967565b6050900590565b9461387861387361386d613864600b8705966138d7565b6137e087613979565b9661399b565b61398a565b6138f3565b91909192565b9060038201915f6003841291129080158216911516176120f457565b9060018201915f6001841291129080158216911516176120f457565b90601f8201915f601f841291129080158216911516176120f457565b9060028201915f6002841291129080158216911516176120f457565b9190915f83820193841291129080158216911516176120f457565b908160021b9160048305036120f457565b9062023ab191808302928305036120f457565b90610fa091808302928305036120f457565b906105b591808302928305036120f457565b90816050029160508305036120f457565b9061098f91808302928305036120f457565b9081600c0291600c8305036120f457565b90816064029160648305036120f457565b9060301982019182136001166120f457565b81810392915f1380158285131691841216176120f457565b815181546020808501516bffffffffffffffffffffffff1990921663ffffffff9093169290921790821b6bffffffffffffffff0000000016178255604090920151805160019283019390916001600160401b03831161047d57613a2c8361237e8754610620565b81601f8411600114613a5757509282939183925f946123b05750501b915f199060031b1c1916179055565b919083601f198116613a6c885f5260205f2090565b945f905b88838310613a8a57505050106122e557505050811b019055565b858701518855909601959485019487935090810190613a70565b81604051928392833781015f815203902090565b90918060409360208452816020850152848401375f828201840152601f01601f1916010190565b9192908015610408578115610408576001600160401b0380613b018386611f4e565b5460201c1615613bb5575b9083613b9b613ba093613b7c613b50613b46867fbaa206e5ea800eb88bce099f453fee53295b793b9d5d1cfc4ce4b6db06a34f539a611f4e565b5463ffffffff1690565b91613b68613b5c610508565b63ffffffff9094168452565b421660208301906001600160401b03169052565b613b8736878a610530565b6040820152613b968484611f4e565b6139c5565b613aa4565b92613bb060405192839283613ab8565b0390a2565b9060025493600160401b85101561047d5760018501806002558510156109e157613b9b613ba093613c2e84847fbaa206e5ea800eb88bce099f453fee53295b793b9d5d1cfc4ce4b6db06a34f539960025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01611fbf565b613c5f613c4060025463ffffffff1690565b613c4a8686611f4e565b9063ffffffff1663ffffffff19825416179055565b929350509350613b0c56fea264697066735822122053f302230c726559e13b5700da3d2c4ce797bc249dc68a6e1e29ef93eaa81c5d64736f6c63430008140033"

    @overload
    @classmethod
    def deploy(cls, *, from_: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, return_tx: Literal[False] = False, request_type: Literal["call"], chain: Optional[Chain] = None, gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bytearray:
        ...

    @overload
    @classmethod
    def deploy(cls, *, from_: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, return_tx: Literal[False] = False, request_type: Literal["tx"] = "tx", chain: Optional[Chain] = None, gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Bolivares:
        ...

    @overload
    @classmethod
    def deploy(cls, *, from_: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, return_tx: Literal[False] = False, request_type: Literal["estimate"], chain: Optional[Chain] = None, gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        ...

    @overload
    @classmethod
    def deploy(cls, *, from_: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, return_tx: Literal[False] = False, request_type: Literal["access_list"], chain: Optional[Chain] = None, gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        ...

    @overload
    @classmethod
    def deploy(cls, *, from_: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, return_tx: Literal[True], request_type: Literal["tx"] = "tx", chain: Optional[Chain] = None, gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Bolivares]:
        ...

    @classmethod
    def deploy(cls, *, from_: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, return_tx: bool = False, request_type: RequestType = "tx", chain: Optional[Chain] = None, gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bytearray, Bolivares, int, Tuple[Dict[Address, List[int]], int], TransactionAbc[Bolivares]]:
        return cls._deploy(request_type, [], return_tx, Bolivares, from_, value, gas_limit, {}, chain, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @classmethod
    def get_creation_code(cls) -> bytes:
        return cls._get_creation_code({})

    @dataclasses.dataclass
    class VouchInfo:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#22)

        Attributes:
            sender (Address): address
            lastUpdateTime (uint48): uint48
            revokedTime (uint48): uint48
        """
        original_name = 'VouchInfo'

        sender: Address
        lastUpdateTime: uint48
        revokedTime: uint48


    @dataclasses.dataclass
    class VouchData:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#48)

        Attributes:
            sender (Address): address
            message (str): string
        """
        original_name = 'VouchData'

        sender: Address
        message: str


    @overload
    def VOUCH_NAME(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> str:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#18)

        Returns:
            string
        """
        ...

    @overload
    def VOUCH_NAME(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#18)

        Returns:
            string
        """
        ...

    @overload
    def VOUCH_NAME(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#18)

        Returns:
            string
        """
        ...

    @overload
    def VOUCH_NAME(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[str]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#18)

        Returns:
            string
        """
        ...

    def VOUCH_NAME(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[str, TransactionAbc[str], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#18)

        Returns:
            string
        """
        return self._execute(self.chain, request_type, "2566080a", [], True if request_type == "tx" else False, str, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def VOUCH_ID(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bytes32:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#19)

        Returns:
            bytes32
        """
        ...

    @overload
    def VOUCH_ID(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#19)

        Returns:
            bytes32
        """
        ...

    @overload
    def VOUCH_ID(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#19)

        Returns:
            bytes32
        """
        ...

    @overload
    def VOUCH_ID(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bytes32]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#19)

        Returns:
            bytes32
        """
        ...

    def VOUCH_ID(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bytes32, TransactionAbc[bytes32], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#19)

        Returns:
            bytes32
        """
        return self._execute(self.chain, request_type, "fcfdd119", [], True if request_type == "tx" else False, bytes32, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def VOUCH_MSG(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> str:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#20)

        Returns:
            string
        """
        ...

    @overload
    def VOUCH_MSG(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#20)

        Returns:
            string
        """
        ...

    @overload
    def VOUCH_MSG(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#20)

        Returns:
            string
        """
        ...

    @overload
    def VOUCH_MSG(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[str]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#20)

        Returns:
            string
        """
        ...

    def VOUCH_MSG(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[str, TransactionAbc[str], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#20)

        Returns:
            string
        """
        return self._execute(self.chain, request_type, "3d09ea55", [], True if request_type == "tx" else False, str, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def vouchInfo(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Bolivares.VouchInfo:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#29)

        Args:
            key0: bytes32
        Returns:
            struct Bolivares.VouchInfo
        """
        ...

    @overload
    def vouchInfo(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#29)

        Args:
            key0: bytes32
        Returns:
            struct Bolivares.VouchInfo
        """
        ...

    @overload
    def vouchInfo(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#29)

        Args:
            key0: bytes32
        Returns:
            struct Bolivares.VouchInfo
        """
        ...

    @overload
    def vouchInfo(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Bolivares.VouchInfo]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#29)

        Args:
            key0: bytes32
        Returns:
            struct Bolivares.VouchInfo
        """
        ...

    def vouchInfo(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[Bolivares.VouchInfo, TransactionAbc[Bolivares.VouchInfo], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#29)

        Args:
            key0: bytes32
        Returns:
            struct Bolivares.VouchInfo
        """
        return self._execute(self.chain, request_type, "1d09cb50", [key0], True if request_type == "tx" else False, Bolivares.VouchInfo, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def vouchMsg(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> str:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#31)

        Args:
            key0: bytes32
        Returns:
            string
        """
        ...

    @overload
    def vouchMsg(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#31)

        Args:
            key0: bytes32
        Returns:
            string
        """
        ...

    @overload
    def vouchMsg(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#31)

        Args:
            key0: bytes32
        Returns:
            string
        """
        ...

    @overload
    def vouchMsg(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[str]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#31)

        Args:
            key0: bytes32
        Returns:
            string
        """
        ...

    def vouchMsg(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[str, TransactionAbc[str], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#31)

        Args:
            key0: bytes32
        Returns:
            string
        """
        return self._execute(self.chain, request_type, "31e1f5f7", [key0], True if request_type == "tx" else False, str, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def userInfo(self, key0: Union[Account, Address], index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bytes32:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#33)

        Args:
            key0: address
            index1: uint256
        Returns:
            bytes32
        """
        ...

    @overload
    def userInfo(self, key0: Union[Account, Address], index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#33)

        Args:
            key0: address
            index1: uint256
        Returns:
            bytes32
        """
        ...

    @overload
    def userInfo(self, key0: Union[Account, Address], index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#33)

        Args:
            key0: address
            index1: uint256
        Returns:
            bytes32
        """
        ...

    @overload
    def userInfo(self, key0: Union[Account, Address], index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bytes32]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#33)

        Args:
            key0: address
            index1: uint256
        Returns:
            bytes32
        """
        ...

    def userInfo(self, key0: Union[Account, Address], index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bytes32, TransactionAbc[bytes32], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#33)

        Args:
            key0: address
            index1: uint256
        Returns:
            bytes32
        """
        return self._execute(self.chain, request_type, "21ce919d", [key0, index1], True if request_type == "tx" else False, bytes32, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def tokenIds(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#35)

        Returns:
            uint256
        """
        ...

    @overload
    def tokenIds(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#35)

        Returns:
            uint256
        """
        ...

    @overload
    def tokenIds(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#35)

        Returns:
            uint256
        """
        ...

    @overload
    def tokenIds(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#35)

        Returns:
            uint256
        """
        ...

    def tokenIds(self, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#35)

        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "714cff56", [], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def vouchToken(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#38)

        Args:
            key0: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def vouchToken(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#38)

        Args:
            key0: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def vouchToken(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#38)

        Args:
            key0: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def vouchToken(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#38)

        Args:
            key0: bytes32
        Returns:
            uint256
        """
        ...

    def vouchToken(self, key0: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#38)

        Args:
            key0: bytes32
        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "f94e925d", [key0], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def tokenInfo(self, key0: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bytes32:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#40)

        Args:
            key0: uint256
        Returns:
            bytes32
        """
        ...

    @overload
    def tokenInfo(self, key0: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#40)

        Args:
            key0: uint256
        Returns:
            bytes32
        """
        ...

    @overload
    def tokenInfo(self, key0: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#40)

        Args:
            key0: uint256
        Returns:
            bytes32
        """
        ...

    @overload
    def tokenInfo(self, key0: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bytes32]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#40)

        Args:
            key0: uint256
        Returns:
            bytes32
        """
        ...

    def tokenInfo(self, key0: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bytes32, TransactionAbc[bytes32], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#40)

        Args:
            key0: uint256
        Returns:
            bytes32
        """
        return self._execute(self.chain, request_type, "cc33c875", [key0], True if request_type == "tx" else False, bytes32, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def userBarcode(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> str:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#42)

        Args:
            key0: address
        Returns:
            string
        """
        ...

    @overload
    def userBarcode(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#42)

        Args:
            key0: address
        Returns:
            string
        """
        ...

    @overload
    def userBarcode(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#42)

        Args:
            key0: address
        Returns:
            string
        """
        ...

    @overload
    def userBarcode(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[str]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#42)

        Args:
            key0: address
        Returns:
            string
        """
        ...

    def userBarcode(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[str, TransactionAbc[str], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#42)

        Args:
            key0: address
        Returns:
            string
        """
        return self._execute(self.chain, request_type, "13aadd33", [key0], True if request_type == "tx" else False, str, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def barcodes(self, key0: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Address:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#44)

        Args:
            key0: string
        Returns:
            address
        """
        ...

    @overload
    def barcodes(self, key0: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#44)

        Args:
            key0: string
        Returns:
            address
        """
        ...

    @overload
    def barcodes(self, key0: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#44)

        Args:
            key0: string
        Returns:
            address
        """
        ...

    @overload
    def barcodes(self, key0: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Address]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#44)

        Args:
            key0: string
        Returns:
            address
        """
        ...

    def barcodes(self, key0: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[Address, TransactionAbc[Address], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#44)

        Args:
            key0: string
        Returns:
            address
        """
        return self._execute(self.chain, request_type, "cbf3e132", [key0], True if request_type == "tx" else False, Address, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def vouchCount(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#46)

        Args:
            key0: address
        Returns:
            uint256
        """
        ...

    @overload
    def vouchCount(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#46)

        Args:
            key0: address
        Returns:
            uint256
        """
        ...

    @overload
    def vouchCount(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#46)

        Args:
            key0: address
        Returns:
            uint256
        """
        ...

    @overload
    def vouchCount(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#46)

        Args:
            key0: address
        Returns:
            uint256
        """
        ...

    def vouchCount(self, key0: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#46)

        Args:
            key0: address
        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "caac4115", [key0], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def doesVouch(self, key0: Union[Account, Address], key1: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bool:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#53)

        Args:
            key0: address
            key1: address
        Returns:
            bool
        """
        ...

    @overload
    def doesVouch(self, key0: Union[Account, Address], key1: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#53)

        Args:
            key0: address
            key1: address
        Returns:
            bool
        """
        ...

    @overload
    def doesVouch(self, key0: Union[Account, Address], key1: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#53)

        Args:
            key0: address
            key1: address
        Returns:
            bool
        """
        ...

    @overload
    def doesVouch(self, key0: Union[Account, Address], key1: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bool]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#53)

        Args:
            key0: address
            key1: address
        Returns:
            bool
        """
        ...

    def doesVouch(self, key0: Union[Account, Address], key1: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bool, TransactionAbc[bool], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#53)

        Args:
            key0: address
            key1: address
        Returns:
            bool
        """
        return self._execute(self.chain, request_type, "28da670a", [key0, key1], True if request_type == "tx" else False, bool, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def unvouched(self, key0: str, index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Bolivares.VouchData:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#54)

        Args:
            key0: string
            index1: uint256
        Returns:
            struct Bolivares.VouchData
        """
        ...

    @overload
    def unvouched(self, key0: str, index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#54)

        Args:
            key0: string
            index1: uint256
        Returns:
            struct Bolivares.VouchData
        """
        ...

    @overload
    def unvouched(self, key0: str, index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#54)

        Args:
            key0: string
            index1: uint256
        Returns:
            struct Bolivares.VouchData
        """
        ...

    @overload
    def unvouched(self, key0: str, index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Bolivares.VouchData]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#54)

        Args:
            key0: string
            index1: uint256
        Returns:
            struct Bolivares.VouchData
        """
        ...

    def unvouched(self, key0: str, index1: int, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[Bolivares.VouchData, TransactionAbc[Bolivares.VouchData], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#54)

        Args:
            key0: string
            index1: uint256
        Returns:
            struct Bolivares.VouchData
        """
        return self._execute(self.chain, request_type, "2a97e18c", [key0, index1], True if request_type == "tx" else False, Bolivares.VouchData, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def register(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#65)

        Args:
            barcode: string
        """
        ...

    @overload
    def register(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#65)

        Args:
            barcode: string
        """
        ...

    @overload
    def register(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#65)

        Args:
            barcode: string
        """
        ...

    @overload
    def register(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#65)

        Args:
            barcode: string
        """
        ...

    def register(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#65)

        Args:
            barcode: string
        """
        return self._execute(self.chain, request_type, "f2c298be", [barcode], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def unregister(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#75)

        Args:
            barcode: string
        """
        ...

    @overload
    def unregister(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#75)

        Args:
            barcode: string
        """
        ...

    @overload
    def unregister(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#75)

        Args:
            barcode: string
        """
        ...

    @overload
    def unregister(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#75)

        Args:
            barcode: string
        """
        ...

    def unregister(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#75)

        Args:
            barcode: string
        """
        return self._execute(self.chain, request_type, "6598a1ae", [barcode], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def processUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#86)

        Args:
            barcode: string
        """
        ...

    @overload
    def processUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#86)

        Args:
            barcode: string
        """
        ...

    @overload
    def processUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#86)

        Args:
            barcode: string
        """
        ...

    @overload
    def processUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#86)

        Args:
            barcode: string
        """
        ...

    def processUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#86)

        Args:
            barcode: string
        """
        return self._execute(self.chain, request_type, "79898ebb", [barcode], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def processAllUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#99)

        Args:
            barcode: string
        """
        ...

    @overload
    def processAllUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#99)

        Args:
            barcode: string
        """
        ...

    @overload
    def processAllUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#99)

        Args:
            barcode: string
        """
        ...

    @overload
    def processAllUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#99)

        Args:
            barcode: string
        """
        ...

    def processAllUnvouched(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#99)

        Args:
            barcode: string
        """
        return self._execute(self.chain, request_type, "b451a93a", [barcode], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def unvouchedCount(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#118)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    @overload
    def unvouchedCount(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#118)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    @overload
    def unvouchedCount(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#118)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    @overload
    def unvouchedCount(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#118)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    def unvouchedCount(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#118)

        Args:
            barcode: string
        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "b114ad9c", [barcode], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def vouch(self, barcode: str, message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bool:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#133)

        Args:
            barcode: string
            message: string
        Returns:
            bool
        """
        ...

    @overload
    def vouch(self, barcode: str, message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#133)

        Args:
            barcode: string
            message: string
        Returns:
            bool
        """
        ...

    @overload
    def vouch(self, barcode: str, message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#133)

        Args:
            barcode: string
            message: string
        Returns:
            bool
        """
        ...

    @overload
    def vouch(self, barcode: str, message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bool]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#133)

        Args:
            barcode: string
            message: string
        Returns:
            bool
        """
        ...

    def vouch(self, barcode: str, message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bool, TransactionAbc[bool], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#133)

        Args:
            barcode: string
            message: string
        Returns:
            bool
        """
        return self._execute(self.chain, request_type, "c005e554", [barcode, message], True if request_type == "tx" else False, bool, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def verify(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#150)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    @overload
    def verify(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#150)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    @overload
    def verify(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#150)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    @overload
    def verify(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#150)

        Args:
            barcode: string
        Returns:
            uint256
        """
        ...

    def verify(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#150)

        Args:
            barcode: string
        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "bb9c6c3e", [barcode], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def generateVouchHash(self, sender: Union[Account, Address], recipient: Union[Account, Address], message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bytes32:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#213)

        Args:
            sender: address
            recipient: address
            message: string
        Returns:
            bytes32
        """
        ...

    @overload
    def generateVouchHash(self, sender: Union[Account, Address], recipient: Union[Account, Address], message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#213)

        Args:
            sender: address
            recipient: address
            message: string
        Returns:
            bytes32
        """
        ...

    @overload
    def generateVouchHash(self, sender: Union[Account, Address], recipient: Union[Account, Address], message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#213)

        Args:
            sender: address
            recipient: address
            message: string
        Returns:
            bytes32
        """
        ...

    @overload
    def generateVouchHash(self, sender: Union[Account, Address], recipient: Union[Account, Address], message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bytes32]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#213)

        Args:
            sender: address
            recipient: address
            message: string
        Returns:
            bytes32
        """
        ...

    def generateVouchHash(self, sender: Union[Account, Address], recipient: Union[Account, Address], message: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bytes32, TransactionAbc[bytes32], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#213)

        Args:
            sender: address
            recipient: address
            message: string
        Returns:
            bytes32
        """
        return self._execute(self.chain, request_type, "047a038f", [sender, recipient, message], True if request_type == "tx" else False, bytes32, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def revoke(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bool:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#225)

        Args:
            vouchId: bytes32
        Returns:
            bool
        """
        ...

    @overload
    def revoke(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#225)

        Args:
            vouchId: bytes32
        Returns:
            bool
        """
        ...

    @overload
    def revoke(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#225)

        Args:
            vouchId: bytes32
        Returns:
            bool
        """
        ...

    @overload
    def revoke(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bool]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#225)

        Args:
            vouchId: bytes32
        Returns:
            bool
        """
        ...

    def revoke(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bool, TransactionAbc[bool], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#225)

        Args:
            vouchId: bytes32
        Returns:
            bool
        """
        return self._execute(self.chain, request_type, "b75c7dc6", [vouchId], True if request_type == "tx" else False, bool, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def tokenURI(self, id: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> str:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#244)

        Args:
            id: uint256
        Returns:
            string
        """
        ...

    @overload
    def tokenURI(self, id: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#244)

        Args:
            id: uint256
        Returns:
            string
        """
        ...

    @overload
    def tokenURI(self, id: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#244)

        Args:
            id: uint256
        Returns:
            string
        """
        ...

    @overload
    def tokenURI(self, id: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[str]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#244)

        Args:
            id: uint256
        Returns:
            string
        """
        ...

    def tokenURI(self, id: uint256, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[str, TransactionAbc[str], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#244)

        Args:
            id: uint256
        Returns:
            string
        """
        return self._execute(self.chain, request_type, "c87b56dd", [id], True if request_type == "tx" else False, str, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def setDocument(self, _name: str, _data: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#252)

        Args:
            _name: string
            _data: string
        """
        ...

    @overload
    def setDocument(self, _name: str, _data: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#252)

        Args:
            _name: string
            _data: string
        """
        ...

    @overload
    def setDocument(self, _name: str, _data: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#252)

        Args:
            _name: string
            _data: string
        """
        ...

    @overload
    def setDocument(self, _name: str, _data: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#252)

        Args:
            _name: string
            _data: string
        """
        ...

    def setDocument(self, _name: str, _data: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#252)

        Args:
            _name: string
            _data: string
        """
        return self._execute(self.chain, request_type, "9c64d0ae", [_name, _data], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def setDocuments(self, _name: List[str], _data: List[str], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#256)

        Args:
            _name: string[]
            _data: string[]
        """
        ...

    @overload
    def setDocuments(self, _name: List[str], _data: List[str], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#256)

        Args:
            _name: string[]
            _data: string[]
        """
        ...

    @overload
    def setDocuments(self, _name: List[str], _data: List[str], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#256)

        Args:
            _name: string[]
            _data: string[]
        """
        ...

    @overload
    def setDocuments(self, _name: List[str], _data: List[str], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#256)

        Args:
            _name: string[]
            _data: string[]
        """
        ...

    def setDocuments(self, _name: List[str], _data: List[str], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#256)

        Args:
            _name: string[]
            _data: string[]
        """
        return self._execute(self.chain, request_type, "c92bce87", [_name, _data], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def removeDocument(self, _name: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> None:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#263)

        Args:
            _name: string
        """
        ...

    @overload
    def removeDocument(self, _name: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#263)

        Args:
            _name: string
        """
        ...

    @overload
    def removeDocument(self, _name: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#263)

        Args:
            _name: string
        """
        ...

    @overload
    def removeDocument(self, _name: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"] = "tx", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[None]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#263)

        Args:
            _name: string
        """
        ...

    def removeDocument(self, _name: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'tx', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[None, TransactionAbc[None], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#263)

        Args:
            _name: string
        """
        return self._execute(self.chain, request_type, "dde51f6d", [_name], True if request_type == "tx" else False, NoneType, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def verifyVouchSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> bool:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#271)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            bool
        """
        ...

    @overload
    def verifyVouchSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#271)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            bool
        """
        ...

    @overload
    def verifyVouchSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#271)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            bool
        """
        ...

    @overload
    def verifyVouchSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[bool]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#271)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            bool
        """
        ...

    def verifyVouchSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[bool, TransactionAbc[bool], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#271)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            bool
        """
        return self._execute(self.chain, request_type, "8cf2f9b5", [hash, sig], True if request_type == "tx" else False, bool, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def revoked(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#276)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def revoked(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#276)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def revoked(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#276)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def revoked(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#276)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    def revoked(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#276)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "328a93e8", [vouchId], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def lastUpdated(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> uint256:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#280)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def lastUpdated(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#280)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def lastUpdated(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#280)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    @overload
    def lastUpdated(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[uint256]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#280)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        ...

    def lastUpdated(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[uint256, TransactionAbc[uint256], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#280)

        Args:
            vouchId: bytes32
        Returns:
            uint256
        """
        return self._execute(self.chain, request_type, "060eb2f5", [vouchId], True if request_type == "tx" else False, uint256, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def vouchSender(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Address:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#284)

        Args:
            vouchId: bytes32
        Returns:
            address
        """
        ...

    @overload
    def vouchSender(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#284)

        Args:
            vouchId: bytes32
        Returns:
            address
        """
        ...

    @overload
    def vouchSender(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#284)

        Args:
            vouchId: bytes32
        Returns:
            address
        """
        ...

    @overload
    def vouchSender(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Address]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#284)

        Args:
            vouchId: bytes32
        Returns:
            address
        """
        ...

    def vouchSender(self, vouchId: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[Address, TransactionAbc[Address], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#284)

        Args:
            vouchId: bytes32
        Returns:
            address
        """
        return self._execute(self.chain, request_type, "f6bb93ec", [vouchId], True if request_type == "tx" else False, Address, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def getVouch(self, _vouchID: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> str:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#290)

        Args:
            _vouchID: bytes32
        Returns:
            string
        """
        ...

    @overload
    def getVouch(self, _vouchID: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#290)

        Args:
            _vouchID: bytes32
        Returns:
            string
        """
        ...

    @overload
    def getVouch(self, _vouchID: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#290)

        Args:
            _vouchID: bytes32
        Returns:
            string
        """
        ...

    @overload
    def getVouch(self, _vouchID: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[str]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#290)

        Args:
            _vouchID: bytes32
        Returns:
            string
        """
        ...

    def getVouch(self, _vouchID: bytes32, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[str, TransactionAbc[str], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#290)

        Args:
            _vouchID: bytes32
        Returns:
            string
        """
        return self._execute(self.chain, request_type, "53385cac", [_vouchID], True if request_type == "tx" else False, str, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def getUserFromVouch(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Address:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#293)

        Args:
            barcode: string
        Returns:
            address
        """
        ...

    @overload
    def getUserFromVouch(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#293)

        Args:
            barcode: string
        Returns:
            address
        """
        ...

    @overload
    def getUserFromVouch(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#293)

        Args:
            barcode: string
        Returns:
            address
        """
        ...

    @overload
    def getUserFromVouch(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Address]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#293)

        Args:
            barcode: string
        Returns:
            address
        """
        ...

    def getUserFromVouch(self, barcode: str, *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[Address, TransactionAbc[Address], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#293)

        Args:
            barcode: string
        Returns:
            address
        """
        return self._execute(self.chain, request_type, "79032fc8", [barcode], True if request_type == "tx" else False, Address, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def getUserVouches(self, _user: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> List[bytes32]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#298)

        Args:
            _user: address
        Returns:
            bytes32[]
        """
        ...

    @overload
    def getUserVouches(self, _user: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#298)

        Args:
            _user: address
        Returns:
            bytes32[]
        """
        ...

    @overload
    def getUserVouches(self, _user: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#298)

        Args:
            _user: address
        Returns:
            bytes32[]
        """
        ...

    @overload
    def getUserVouches(self, _user: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[List[bytes32]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#298)

        Args:
            _user: address
        Returns:
            bytes32[]
        """
        ...

    def getUserVouches(self, _user: Union[Account, Address], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[List[bytes32], TransactionAbc[List[bytes32]], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#298)

        Args:
            _user: address
        Returns:
            bytes32[]
        """
        return self._execute(self.chain, request_type, "6e2ce3b0", [_user], True if request_type == "tx" else False, List[bytes32], from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

    @overload
    def ecrecoverFromSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["call"] = "call", gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Address:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#318)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            address
        """
        ...

    @overload
    def ecrecoverFromSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["estimate"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> int:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#318)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            address
        """
        ...

    @overload
    def ecrecoverFromSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["access_list"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Tuple[Dict[Address, List[int]], int]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#318)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            address
        """
        ...

    @overload
    def ecrecoverFromSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: Literal["tx"], gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> TransactionAbc[Address]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#318)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            address
        """
        ...

    def ecrecoverFromSig(self, hash: bytes32, sig: Union[bytearray, bytes], *, from_: Optional[Union[Account, Address, str]] = None, to: Optional[Union[Account, Address, str]] = None, value: Union[int, str] = 0, gas_limit: Optional[Union[int, Literal["max"], Literal["auto"]]] = None, request_type: RequestType = 'call', gas_price: Optional[Union[int, str]] = None, max_fee_per_gas: Optional[Union[int, str]] = None, max_priority_fee_per_gas: Optional[Union[int, str]] = None, access_list: Optional[Union[Dict[Union[Account, Address, str], List[int]], Literal["auto"]]] = None, type: Optional[int] = None, block: Optional[Union[int, Literal["latest"], Literal["pending"], Literal["earliest"], Literal["safe"], Literal["finalized"]]] = None, confirmations: Optional[int] = None) -> Union[Address, TransactionAbc[Address], int, Tuple[Dict[Address, List[int]], int]]:
        """
        [Source code](file:///Users/kutu/projects/Vouch/new/vouch/contracts/Bolivares.sol#318)

        Args:
            hash: bytes32
            sig: bytes
        Returns:
            address
        """
        return self._execute(self.chain, request_type, "d4acaf6c", [hash, sig], True if request_type == "tx" else False, Address, from_, to if to is not None else str(self.address), value, gas_limit, gas_price, max_fee_per_gas, max_priority_fee_per_gas, access_list, type, block, confirmations)

Bolivares.VOUCH_NAME.selector = b'%f\x08\n'
Bolivares.VOUCH_ID.selector = b'\xfc\xfd\xd1\x19'
Bolivares.VOUCH_MSG.selector = b'=\t\xeaU'
Bolivares.vouchInfo.selector = b'\x1d\t\xcbP'
Bolivares.vouchMsg.selector = b'1\xe1\xf5\xf7'
Bolivares.userInfo.selector = b'!\xce\x91\x9d'
Bolivares.tokenIds.selector = b'qL\xffV'
Bolivares.vouchToken.selector = b'\xf9N\x92]'
Bolivares.tokenInfo.selector = b'\xcc3\xc8u'
Bolivares.userBarcode.selector = b'\x13\xaa\xdd3'
Bolivares.barcodes.selector = b'\xcb\xf3\xe12'
Bolivares.vouchCount.selector = b'\xca\xacA\x15'
Bolivares.doesVouch.selector = b'(\xdag\n'
Bolivares.unvouched.selector = b'*\x97\xe1\x8c'
Bolivares.register.selector = b'\xf2\xc2\x98\xbe'
Bolivares.unregister.selector = b'e\x98\xa1\xae'
Bolivares.processUnvouched.selector = b'y\x89\x8e\xbb'
Bolivares.processAllUnvouched.selector = b'\xb4Q\xa9:'
Bolivares.unvouchedCount.selector = b'\xb1\x14\xad\x9c'
Bolivares.vouch.selector = b'\xc0\x05\xe5T'
Bolivares.verify.selector = b'\xbb\x9cl>'
Bolivares.generateVouchHash.selector = b'\x04z\x03\x8f'
Bolivares.revoke.selector = b'\xb7\\}\xc6'
Bolivares.tokenURI.selector = b'\xc8{V\xdd'
Bolivares.setDocument.selector = b'\x9cd\xd0\xae'
Bolivares.setDocuments.selector = b'\xc9+\xce\x87'
Bolivares.removeDocument.selector = b'\xdd\xe5\x1fm'
Bolivares.verifyVouchSig.selector = b'\x8c\xf2\xf9\xb5'
Bolivares.revoked.selector = b'2\x8a\x93\xe8'
Bolivares.lastUpdated.selector = b'\x06\x0e\xb2\xf5'
Bolivares.vouchSender.selector = b'\xf6\xbb\x93\xec'
Bolivares.getVouch.selector = b'S8\\\xac'
Bolivares.getUserFromVouch.selector = b'y\x03/\xc8'
Bolivares.getUserVouches.selector = b'n,\xe3\xb0'
Bolivares.ecrecoverFromSig.selector = b'\xd4\xac\xafl'
